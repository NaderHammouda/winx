#stages:
  #- build
  #- test
  #- docker-build

#build:
  #stage: build
  #image: node
  #script: 
   # - echo "Start building App"
    #- npm install
    #- npm run build
    #- echo "Build successfully!"
  #artifacts:
   # expire_in: 1 hour
   # paths:
      #- build
      #- node_modules/

#test:
 # stage: test
  #image: node
  #script:
   # - echo "Testing App"
    #- CI=true npm run unit
    #- echo "Test successfully!"

#sonarqube-check:
 # stage: test
 # image: 
   # name: sonarsource/sonar-scanner-cli:latest
    #entrypoint: [""]
 # variables:
   # SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    #GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  #cache:
   # key: "${CI_JOB_NAME}"
   # paths:
    #  - .sonar/cache
 # script: 
    #- sonar-scanner
  #allow_failure: true
  #only:
   # - merge_requests
   # - main # or the name of your main branch
    #- develop

docker-build:
  #stage: docker-build
  image: docker:latest
  services: 
    - name: docker:19.03.8-dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" --password-stdin "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker build --pull -t "$CI_REGISTRY_IMAGE" .
    - docker push "$CI_REGISTRY_IMAGE"
    